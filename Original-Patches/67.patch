From aa754d5580e211740bf063842707bd32db866306 Mon Sep 17 00:00:00 2001
From: andi34 <skate4life@gmx.de>
Date: Sat, 12 Jul 2014 16:25:18 +0200
Subject: [PATCH] arch/arm/plat-omap/android-display.c: revert JB Update 1/3

---
diff --git a/arch/arm/plat-omap/android-display.c b/arch/arm/plat-omap/android-display.c
index 70f931a..503ef4b 100644
--- a/arch/arm/plat-omap/android-display.c
+++ b/arch/arm/plat-omap/android-display.c
@@ -76,9 +76,22 @@ static int __init get_hdmi_options(char *str)
 }
 early_param("omapdss.hdmi_options", get_hdmi_options);
 
-static void get_display_size(struct omap_dss_device *device,
+static void get_display_size(struct omap_dss_board_info *info,
 			     struct omap_android_display_data *mem)
 {
+	struct omap_dss_device *device = NULL;
+	int i;
+
+	if (!info)
+		goto done;
+
+	device = info->default_device;
+	for (i = 0; i < info->num_devices; i++) {
+		if (!strcmp(default_display, info->devices[i]->name)) {
+			device = info->devices[i];
+			break;
+		}
+	}
 
 	if (!device)
 		goto done;
@@ -94,8 +107,8 @@ static void get_display_size(struct omap_dss_device *device,
 	if (device->ctrl.pixel_size)
 		mem->bpp = ALIGN(device->ctrl.pixel_size, 16) >> 3;
 
-	pr_info("android_display: setting %s resolution to %u*%u, bpp=%u\n",
-		device->name, mem->width, mem->height, mem->bpp);
+	pr_info("android_display: setting default resolution %u*%u, bpp=%u\n",
+					mem->width, mem->height, mem->bpp);
 done:
 	return;
 }
@@ -144,25 +157,50 @@ static u32 vram_size(struct omap_android_display_data *mem)
 }
 
 static void set_vram_sizes(struct sgx_omaplfb_config *sgx_config,
-		struct omapfb_mem_region *region,
-		struct omap_android_display_data *mem,
-		unsigned fbnum)
+			   struct omapfb_platform_data *fb,
+			   struct omap_android_display_data *mem)
 {
-	u32 num_vram_buffers;
+	u32 num_vram_buffers = 0;
 	u32 vram = 0;
+	int i;
 
-	if (!sgx_config || !region || !mem)
-		return;
+	if (fb && fb->mem_desc.region_cnt >= 1) {
+		/* Need at least 1 VRAM buffer for fb0 */
+		num_vram_buffers = 1;
+	}
 
-	/* Need at least 1 VRAM buffer for fb0 */
-	num_vram_buffers = max(sgx_config->vram_buffers, 1u);
-	vram += sgx_config->vram_reserve;
+	if (sgx_config) {
+#if defined(CONFIG_GCBV)
+		/* Add 2 extra VRAM buffers for gc320 composition - 4470 only*/
+		/* TODO: cpu_is_omap447x() is not returning the proper value
+			at this stage. Need to fix it */
+		if (1/*cpu_is_omap447x()*/)
+			sgx_config->vram_buffers += 2;
+#endif
+
+		vram += sgx_config->vram_reserve;
+		num_vram_buffers = max(sgx_config->vram_buffers,
+				       num_vram_buffers);
+	}
 
 	vram += num_vram_buffers * vram_size(mem);
-	/* set fb vram needs */
-	region->size = vram;
-	pr_info("android_display: setting fb%u.vram to %u\n", fbnum, vram);
 
+	if (fb) {
+		/* set fb0 vram needs */
+		if (fb->mem_desc.region_cnt >= 1) {
+			fb->mem_desc.region[0].size = vram;
+			pr_info("android_display: setting fb0.vram to %u\n",
+									vram);
+		}
+
+		/* set global vram needs incl. additional regions specified */
+		for (i = 1; i < fb->mem_desc.region_cnt; i++)
+			if (!fb->mem_desc.region[i].paddr)
+				vram += fb->mem_desc.region[i].size;
+	}
+
+	pr_info("android_display: setting vram to %u\n", vram);
+	omap_vram_set_sdram_vram(vram, 0);
 }
 
 static void set_ion_carveouts(struct sgx_omaplfb_config *sgx_config,
@@ -178,7 +216,6 @@ static void set_ion_carveouts(struct sgx_omaplfb_config *sgx_config,
 	if (sgx_config)
 		num_buffers = sgx_config->tiler2d_buffers;
 
-
 	/* width must be aligned to 128 bytes */
 	width = ALIGN(mem->width, 128 / mem->bpp);
 	fmt = mem->bpp <= 2 ? TILFMT_16BIT : TILFMT_32BIT;
@@ -211,15 +248,13 @@ static void set_ion_carveouts(struct sgx_omaplfb_config *sgx_config,
 }
 
 /* coordinate between sgx, omapdss, dsscomp and ion needs */
-int omap_android_display_setup(struct omap_dss_board_info *dss,
+void omap_android_display_setup(struct omap_dss_board_info *dss,
 			       struct dsscomp_platform_data *dsscomp,
 			       struct sgx_omaplfb_platform_data *sgx,
 			       struct omapfb_platform_data *fb,
 			       struct omap_ion_platform_data *ion)
 {
 	struct sgx_omaplfb_config *p_sgx_config = NULL;
-	int i;
-	u32 omapfb_vram = 0;
 
 	struct omap_android_display_data mem = {
 		.bpp = 4,
@@ -227,34 +262,16 @@ int omap_android_display_setup(struct omap_dss_board_info *dss,
 		.height = 1080,
 	};
 
-	if (!sgx || !sgx->num_configs)
-		return -ENODEV;
-	for (i = 0; i < sgx->num_configs; ++i) {
-		p_sgx_config = &(sgx->configs[i]);
-
-		if (i < dss->num_devices)
-			get_display_size(dss->devices[i], &mem);
-
-		if (ion)
-			set_ion_carveouts(p_sgx_config, ion, &mem);
-		set_tiler1d_slot_size(dsscomp, &mem);
-		/* skip region if no sgx_config associated with it
-		 * or it has size pre-set by board configuration
-		 */
-		if (i < fb->mem_desc.region_cnt &&
-				!fb->mem_desc.region[i].size)
-			set_vram_sizes(p_sgx_config, &fb->mem_desc.region[i],
-								&mem, i);
-
-		sgx_omaplfb_set(i, p_sgx_config);
-	}
-	/* set global vram needs incl. additional regions specified */
-	for (i = 0; i < fb->mem_desc.region_cnt; i++)
-		if (!fb->mem_desc.region[i].paddr)
-			omapfb_vram += fb->mem_desc.region[i].size;
+	if (!sgx || !sgx->configs)
+		p_sgx_config = sgx_omaplfb_get(0);
+	else
+		p_sgx_config = &(sgx->configs[0]);
 
-	pr_info("android_display: setting vram to %u\n", omapfb_vram);
-	omap_vram_set_sdram_vram(omapfb_vram, 0);
+	get_display_size(dss, &mem);
+	set_tiler1d_slot_size(dsscomp, &mem);
+	set_vram_sizes(p_sgx_config, fb, &mem);
+	if (ion)
+		set_ion_carveouts(p_sgx_config, ion, &mem);
 
-	return 0;
+	sgx_omaplfb_set(0, p_sgx_config);
 }

--
1.9.3


